name: Terraform
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  Apply-Terraform-Main:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: infraMain Terraform Init
        id: infraMain-init
        run: terraform init
        working-directory: infraMain
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: mailingsignature Terraform Init
        id: mailingsignature-init
        run: terraform init
        working-directory: projects/mailingsignature
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: infraMain Terraform Format
        id: infraMain-fmt
        run: terraform fmt -check
        working-directory: infraMain
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: mailingsignature Terraform Format
        id: mailingsignature-fmt
        run: terraform fmt -check
        working-directory: projects/mailingsignature
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: infraMain Terraform Validate
        id: infraMain-validate
        run: terraform validate -no-color
        working-directory: infraMain
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: mailingsignature Terraform Validate
        id: mailingsignature-validate
        run: terraform validate -no-color
        working-directory: projects/mailingsignature
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: infraMain Terraform Plan
        id: infraMain-plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: infraMain
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: mailingsignature Terraform Plan
        id: mailingsignature-plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: projects/mailingsignature
        continue-on-error: true
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Update Pull Request
        uses: actions/github-script@v4
        if: github.event_name == 'pull_request'
        env:
          PLAN_MAININFRA: "terraform\n${{ steps.infraMain-plan.outputs.stdout }}"
          PLAN_MAILINGSIGNATURE: "terraform\n${{ steps.mailingsignature-plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform infraMain Format and Style üñå\`${{ steps.infraMain-fmt.outcome }}\`
            #### Terraform mailingsignature Format and Style üñå\`${{ steps.mailingsignature-fmt.outcome }}\`
            #### Terraform infraMain Initialization ‚öôÔ∏è\`${{ steps.infraMain-init.outcome }}\`
            #### Terraform mailingsignature Initialization ‚öôÔ∏è\`${{ steps.mailingsignature-init.outcome }}\`
            #### Terraform infraMain Plan üìñ\`${{ steps.infraMain-plan.outcome }}\`
            #### Terraform mailingsignature Plan üìñ\`${{ steps.mailingsignature-plan.outcome }}\`
            #### Terraform infraMain Validation ü§ñ\`${{ steps.infraMain-validate.outcome }}\`
            #### Terraform mailingsignature Validation ü§ñ\`${{ steps.mailingsignature-validate.outcome }}\`

            <details><summary>Show infraMain Plan</summary>

            \`\`\`\n
            ${process.env.PLAN_MAININFRA}
            \`\`\`

            </details>

            <details><summary>Show mailingSignature Plan</summary>

            \`\`\`\n
            ${process.env.PLAN_MAILINGSIGNATURE}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: (steps.infraMain-plan.outcome || steps.mailingsignature-plan.outcome) == 'failure'
        run: exit 1

      - name: infraMain Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: infraMain
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: mailingsignature Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: projects/mailingsignature
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

