name: Terraform
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  Terraform-Main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [ budget, route53 ]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Get file changes
        id: changed-files-specific
        uses: tj-actions/changed-files@v10
        with:
          files: |
            infra-main/${{ matrix.project }}

      - name: Setup Terraform
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: infra-main-init
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: terraform init
        working-directory: infra-main/${{ matrix.project }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Format
        id: infra-main-fmt
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: terraform fmt -check
        working-directory: infra-main/${{ matrix.project }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Validate
        id: infra-main-validate
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: terraform validate -no-color
        working-directory: infra-main/${{ matrix.project }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Plan
        id: infra-main-plan
        if: github.event_name == 'pull_request' && steps.changed-files-specific.outputs.any_changed == 'true'
        run: terraform plan -no-color
        working-directory: infra-main/${{ matrix.project }}
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Update Pull Request
        uses: actions/github-script@v4
        if: github.event_name == 'pull_request' && steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          PLAN_MAIN_INFRA: "Infra Main ${{ matrix.project }}\n${{ steps.infra-main-plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Infra Main ${{ matrix.project }} Format and Style üñå\`${{ steps.infra-main-fmt.outcome }}\`
            #### Terraform Infra Main ${{ matrix.project }} Initialization ‚öôÔ∏è\`${{ steps.infra-main-init.outcome }}\`
            #### Terraform Infra Main ${{ matrix.project }} Plan üìñ\`${{ steps.infra-main-plan.outcome }}\`
            #### Terraform Infra Main ${{ matrix.project }} Validation ü§ñ\`${{ steps.infra-main-validate.outcome }}\`

            <details><summary>Show Infra Main ${{ matrix.project }} Plan</summary>

            \`\`\`\n
            ${process.env.PLAN_MAIN_INFRA}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Plan Status
        if: steps.infra-main-plan.outcome == 'failure' && steps.changed-files-specific.outputs.any_changed == 'true'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && steps.changed-files-specific.outputs.any_changed == 'true'
        run: terraform apply -auto-approve
        working-directory: infra-main/${{ matrix.project }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  Terraform-Project:
    needs:
      - Terraform-Main
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [ ashudev-website, mailing-signature, homelab, switchbot-heatzy-link ]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Get file changes
        id: changed-files-specific
        uses: tj-actions/changed-files@v10
        with:
          files: |
            projects/${{ matrix.project }}

      - name: Setup Terraform
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: project-init
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: terraform init
        working-directory: projects/${{ matrix.project }}
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Format
        id: project-fmt
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: terraform fmt -check
        working-directory: projects/${{ matrix.project }}
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Validate
        id: project-validate
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: terraform validate -no-color
        working-directory: projects/${{ matrix.project }}
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Plan
        id: project-plan
        if: github.event_name == 'pull_request' && steps.changed-files-specific.outputs.any_changed == 'true'
        run: terraform plan -no-color
        working-directory: projects/${{ matrix.project }}
        continue-on-error: true
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Update Pull Request
        uses: actions/github-script@v4
        if: github.event_name == 'pull_request' && steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          PLAN_PROJECT: "Project ${{ matrix.project }} \n${{ steps.project-plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Project Format ${{ matrix.project }} and Style üñå\`${{ steps.project-fmt.outcome }}\`
            #### Terraform Project Initialization ${{ matrix.project }} ‚öôÔ∏è\`${{ steps.project-init.outcome }}\`
            #### Terraform Project Plan ${{ matrix.project }} üìñ\`${{ steps.project-plan.outcome }}\`
            #### Terraform Project Validation ${{ matrix.project }} ü§ñ\`${{ steps.project-validate.outcome }}\`

            <details><summary>Show Project ${{ matrix.project }} Plan</summary>

            \`\`\`\n
            ${process.env.PLAN_PROJECT}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Plan Status
        if: steps.project-plan.outcome == 'failure' && steps.changed-files-specific.outputs.any_changed == 'true'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && steps.changed-files-specific.outputs.any_changed == 'true'
        run: terraform apply -auto-approve
        working-directory: projects/${{ matrix.project }}
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}