name: Terraform
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  Terraform-Main:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: infra-main Terraform Init
        id: infra-main-init
        run: terraform init
        working-directory: infra-main
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: infra-main Terraform Format
        id: infra-main-fmt
        run: terraform fmt -check
        working-directory: infra-main
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: infra-main Terraform Validate
        id: infra-main-validate
        run: terraform validate -no-color
        working-directory: infra-main
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: infra-main Terraform Plan
        id: infra-main-plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: infra-main
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Update Pull Request
        uses: actions/github-script@v4
        if: github.event_name == 'pull_request'
        env:
          PLAN_MAIN_INFRA: "infra-main\n${{ steps.infra-main-plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform infra-main Format and Style üñå\`${{ steps.infra-main-fmt.outcome }}\`
            #### Terraform infra-main Initialization ‚öôÔ∏è\`${{ steps.infra-main-init.outcome }}\`
            #### Terraform infra-main Plan üìñ\`${{ steps.infra-main-plan.outcome }}\`
            #### Terraform infra-main Validation ü§ñ\`${{ steps.infra-main-validate.outcome }}\`

            <details><summary>Show infra-main Plan</summary>

            \`\`\`\n
            ${process.env.PLAN_MAIN_INFRA}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: infra-main Plan Status
        if: steps.infra-main-plan.outcome == 'failure'
        run: exit 1

      - name: infra-main Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: infra-main
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  Terraform-mailing-signature:
    needs: Terraform-Main
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: mailing-signature Terraform Init
        id: mailing-signature-init
        run: terraform init
        working-directory: projects/mailing-signature
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: mailing-signature Terraform Format
        id: mailing-signature-fmt
        run: terraform fmt -check
        working-directory: projects/mailing-signature
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: mailing-signature Terraform Validate
        id: mailing-signature-validate
        run: terraform validate -no-color
        working-directory: projects/mailing-signature
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: mailing-signature Terraform Plan
        id: mailing-signature-plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: projects/mailing-signature
        continue-on-error: true
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Update Pull Request
        uses: actions/github-script@v4
        if: github.event_name == 'pull_request'
        env:
          PLAN_MAILING_SIGNATURE: "mailing-signature\n${{ steps.mailing-signature-plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform infra-main Format and Style üñå\`${{ steps.mailing-signature-fmt.outcome }}\`
            #### Terraform mailing-signature Initialization ‚öôÔ∏è\`${{ steps.mailing-signature-init.outcome }}\`
            #### Terraform mailing-signature Plan üìñ\`${{ steps.mailing-signature-plan.outcome }}\`
            #### Terraform mailing-signature Validation ü§ñ\`${{ steps.mailing-signature-validate.outcome }}\`

            <details><summary>Show mailing-signature Plan</summary>

            \`\`\`\n
            ${process.env.PLAN_MAILING_SIGNATURE}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: mailing-signature Plan Status
        if: steps.mailing-signature-plan.outcome == 'failure'
        run: exit 1

      - name: mailing-signature Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: projects/mailing-signature
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  Terraform-ashudev-websitee:
    needs: Terraform-Main
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: ashudev-website Terraform Init
        id: ashudev-website-init
        run: terraform init
        working-directory: projects/ashudev-website
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: ashudev-website Terraform Format
        id: ashudev-website-fmt
        run: terraform fmt -check
        working-directory: projects/ashudev-website
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: ashudev-website Terraform Validate
        id: ashudev-website-validate
        run: terraform validate -no-color
        working-directory: projects/ashudev-website
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: ashudev-website Terraform Plan
        id: ashudev-website-plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: projects/ashudev-website
        continue-on-error: true
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Update Pull Request
        uses: actions/github-script@v4
        if: github.event_name == 'pull_request'
        env:
          PLAN_ASHUDEV_WEBSITE: "ashudev-website\n${{ steps.ashudev-website-plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform ashudev-website Format and Style üñå\`${{ steps.ashudev-website-fmt.outcome }}\`
            #### Terraform ashudev-website Initialization ‚öôÔ∏è\`${{ steps.ashudev-website-init.outcome }}\`
            #### Terraform ashudev-website Plan üìñ\`${{ steps.ashudev-website-plan.outcome }}\`
            #### Terraform ashudev-website Validation ü§ñ\`${{ steps.ashudev-website-validate.outcome }}\`

            <details><summary>Show ashudev-website Plan</summary>

            \`\`\`\n
            ${process.env.PLAN_ASHUDEV_WEBSITE}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: ashudev-website Plan Status
        if: steps.ashudev-website-plan.outcome == 'failure'
        run: exit 1

      - name: ashudev-website Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: projects/ashudev-website
        env:
          TF_VAR_GIT_TOKEN: ${{ secrets.TF_VAR_GIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

